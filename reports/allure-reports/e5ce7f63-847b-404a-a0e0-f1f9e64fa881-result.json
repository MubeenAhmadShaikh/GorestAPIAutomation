{"name": "test_search_user_pagination_negative[%$#@!]", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: [intentionally failed]No error message returned for invalid page: %$#@! with type as <class 'str'>", "trace": "self = <tests.test_users.TestUsers object at 0x0000021B6B5A3B90>, invalid_data = '%$#@!'\n\n    @pytest.mark.negative\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('invalid_data', [-123, \"%$#@!\", \" \"])\n    def test_search_user_pagination_negative(self, invalid_data):\n        logs = self.get_logger()\n        page = invalid_data\n        per_page = invalid_data\n        logs.info(f\"Page provided: {page} per_page: {per_page}\")\n        response = TestUsers.se.get(base_url + urls.search_user_with_pagination_url(page, per_page))\n        try:\n            common_validations.validate_status_code(response, 200)\n            users_validations.validate_invalid_pagination(page, per_page)\n            logs.info(\"Expected status code and messages are returned for searching invalid pagination parameters\")\n        except AssertionError as ae:\n            logs.error(f\"Test Failed: {ae}\")\n>           raise ae\n\ntest_users.py:409: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_users.py:405: in test_search_user_pagination_negative\n    users_validations.validate_invalid_pagination(page, per_page)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npage = '%$#@!', per_page = '%$#@!'\n\n    def validate_invalid_pagination(page, per_page):\n        if isinstance(page, int) or isinstance(per_page, int):\n            assert (page > 0 or per_page > 0), \"[intentionally failed]No error message returned for invalid page: \" + \\\n                                      str(page) + \" with type as \" + str(type(page))\n    \n>       assert isinstance(page, int), \"[intentionally failed]No error message returned for invalid page: \" + \\\n                                      str(page) + \" with type as \" + str(type(page))\nE       AssertionError: [intentionally failed]No error message returned for invalid page: %$#@! with type as <class 'str'>\n\n..\\utilities\\validations\\users_validations.py:61: AssertionError"}, "attachments": [{"name": "log", "source": "8a0edb11-9f61-4129-879e-125e6424fb85-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "invalid_data", "value": "'%$#@!'"}], "start": 1700274128102, "stop": 1700274128483, "uuid": "0140eabe-6321-4935-98fc-83ef1e47a1b7", "historyId": "402cfa3045a28ee65581d9980ecb8cac", "testCaseId": "11c281872c6efb4357a9ab2f72bd332d", "fullName": "tests.test_users.TestUsers#test_search_user_pagination_negative", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "tag", "value": "negative"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_users"}, {"name": "subSuite", "value": "TestUsers"}, {"name": "host", "value": "DESKTOP-FFIUPF0"}, {"name": "thread", "value": "14704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_users"}]}