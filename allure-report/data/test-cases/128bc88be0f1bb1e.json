{"uid":"128bc88be0f1bb1e","name":"test_search_user_pagination_negative[-123]","fullName":"tests.test_users.TestUsers#test_search_user_pagination_negative","historyId":"b3025204f6defc6ba40e8771effad137","time":{"start":1700274127164,"stop":1700274128047,"duration":883},"status":"skipped","statusMessage":"XFAIL\n\nAssertionError: [intentionally failed]No error message returned for invalid page: -123 with type as <class 'int'>","statusTrace":"self = <tests.test_users.TestUsers object at 0x0000021B6B5A39E0>, invalid_data = -123\n\n    @pytest.mark.negative\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('invalid_data', [-123, \"%$#@!\", \" \"])\n    def test_search_user_pagination_negative(self, invalid_data):\n        logs = self.get_logger()\n        page = invalid_data\n        per_page = invalid_data\n        logs.info(f\"Page provided: {page} per_page: {per_page}\")\n        response = TestUsers.se.get(base_url + urls.search_user_with_pagination_url(page, per_page))\n        try:\n            common_validations.validate_status_code(response, 200)\n            users_validations.validate_invalid_pagination(page, per_page)\n            logs.info(\"Expected status code and messages are returned for searching invalid pagination parameters\")\n        except AssertionError as ae:\n            logs.error(f\"Test Failed: {ae}\")\n>           raise ae\n\ntest_users.py:409: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_users.py:405: in test_search_user_pagination_negative\n    users_validations.validate_invalid_pagination(page, per_page)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npage = -123, per_page = -123\n\n    def validate_invalid_pagination(page, per_page):\n        if isinstance(page, int) or isinstance(per_page, int):\n>           assert (page > 0 or per_page > 0), \"[intentionally failed]No error message returned for invalid page: \" + \\\n                                      str(page) + \" with type as \" + str(type(page))\nE           AssertionError: [intentionally failed]No error message returned for invalid page: -123 with type as <class 'int'>\n\n..\\utilities\\validations\\users_validations.py:58: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"skipped","statusMessage":"XFAIL\n\nAssertionError: [intentionally failed]No error message returned for invalid page: -123 with type as <class 'int'>","statusTrace":"self = <tests.test_users.TestUsers object at 0x0000021B6B5A39E0>, invalid_data = -123\n\n    @pytest.mark.negative\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('invalid_data', [-123, \"%$#@!\", \" \"])\n    def test_search_user_pagination_negative(self, invalid_data):\n        logs = self.get_logger()\n        page = invalid_data\n        per_page = invalid_data\n        logs.info(f\"Page provided: {page} per_page: {per_page}\")\n        response = TestUsers.se.get(base_url + urls.search_user_with_pagination_url(page, per_page))\n        try:\n            common_validations.validate_status_code(response, 200)\n            users_validations.validate_invalid_pagination(page, per_page)\n            logs.info(\"Expected status code and messages are returned for searching invalid pagination parameters\")\n        except AssertionError as ae:\n            logs.error(f\"Test Failed: {ae}\")\n>           raise ae\n\ntest_users.py:409: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_users.py:405: in test_search_user_pagination_negative\n    users_validations.validate_invalid_pagination(page, per_page)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npage = -123, per_page = -123\n\n    def validate_invalid_pagination(page, per_page):\n        if isinstance(page, int) or isinstance(per_page, int):\n>           assert (page > 0 or per_page > 0), \"[intentionally failed]No error message returned for invalid page: \" + \\\n                                      str(page) + \" with type as \" + str(type(page))\nE           AssertionError: [intentionally failed]No error message returned for invalid page: -123 with type as <class 'int'>\n\n..\\utilities\\validations\\users_validations.py:58: AssertionError","steps":[],"attachments":[{"uid":"157e9e83bbcf55db","name":"log","source":"157e9e83bbcf55db.txt","type":"text/plain","size":295}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.xfail"},{"name":"tag","value":"negative"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users"},{"name":"subSuite","value":"TestUsers"},{"name":"host","value":"DESKTOP-FFIUPF0"},{"name":"thread","value":"14704-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"invalid_data","value":"-123"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail","negative"]},"source":"128bc88be0f1bb1e.json","parameterValues":["-123"]}